schema {
  query: Query
  mutation: Mutation
}

scalar Time

type Task {
  id: ID!
  created_by: String!
  created_at: Time!
  started_at: Time!
  ended_at: Time!
  failed: Boolean!
  job: Job!
}

type Job {
  id: ID!
  created_by: String!
  docker_image: String!
  dataset: String
}

input newTask {
  user_id: ID!
  docker_image: String!
  dataset: String
}

type User {
  id: ID!
  admin: Boolean!
  email: String!
  created_at: Time!
}

input newUser {
  email: String!
}

type Query {
    listTasks(userId: String!): [Task]
}

type Mutation {
  create_user(input: newUser!): User!
  create_task(input: newTask!): Task!
}